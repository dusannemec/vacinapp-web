{"version":3,"sources":["components/Store/Context.js","controllers/token.js","components/Header/Header.jsx","components/Header/index.js","controllers/enfermeiros.js","components/Loading/Loading.jsx","components/Login/Login.jsx","components/Login/index.js","components/Loading/index.js","components/Table/Table.jsx","components/Table/index.js","components/CadastroEnfermeiro/CadastroEnfermeiro.jsx","components/CadastroEnfermeiro/index.js","controllers/vacinas.js","components/CadastroVacina/CadastroVacina.jsx","components/CadastroVacina/index.js","controllers/pacientes.js","controllers/vacinacao.js","components/CadastroVacinacao/CadastroVacinacao.jsx","components/CadastroVacinacao/index.js","utils/storage.js","components/Store/Provider.jsx","utils/useStorage.js","App.js","index.js"],"names":["StoreContext","createContext","token","setToken","axios","require","tokenValidation","corpoChamada","tipo","post","then","response","catch","error","Header","alteraTabela","useContext","useState","valido","setValido","useEffect","status","className","to","enviaRegistro","nome","email","coren","senha","admin","enfermeiro","err","getByField","field","value","get","headers","res","console","log","registros","Array","from","data","erro","Loading","type","color","Login","withStyles","input","borderRadius","props","classes","history","useHistory","setCoren","setSenha","setErro","isLoading","setIsLoading","theme","createMuiTheme","palette","primary","main","spacing","push","Fragment","ThemeProvider","onSubmit","event","preventDefault","user","login","accessToken","TextField","label","id","variant","margin","InputProps","onChange","target","style","marginRight","fullWidth","Button","size","Table","tabela","columns","setColumns","dadosTabela","setDadosTabela","labels","cpf","dataNasc","doenca","fabricante","dose","lote","quantidade","prazoMaximoEntreDoses","tempoTotalProtecao","nonLabels","optionsColumns","customBodyRender","tableMeta","updateValue","Tooltip","title","acoes","Authorization","renderCabecalho","col","length","cabecalho","Object","keys","index","item","includes","splice","name","options","filter","filterType","selectableRowsHideCheckboxes","selectableRows","responsive","rowsPerPage","rowsPerPageOptions","customToolbarSelect","customToolbar","IconButton","overrides","MUIDataTable","paper","border","MUIDataTableToolbarSelect","root","borderTopLeftRadius","borderTopRightRadius","charAt","toUpperCase","slice","CadastroEnfermeiro","setNome","setEmail","confirmarSenha","setConfirmarSenha","setAdmin","formularioValido","setFormularioValido","erros","setErros","message","preenchido","setPreenchido","validaFormulario","entries","validaNome","split","validaEmail","re","test","toLowerCase","emails","tamanho","e","validaCoren","corens","validaSenha","validaConfirmarSenha","helperText","trim","onBlur","substring","marginLeft","FormControlLabel","control","Checkbox","checked","disabled","onClick","a","vacina","CadastroVacina","setDoenca","setFabricante","setDose","setLote","setQuantidade","setPrazoMaximoEntreDoses","setTempoTotalProtecao","validaDoenca","validaDose","validaLote","validaQuantidade","prazoMaxEntreDoses","validaPrazoMaximoEntreDoses","validaTempoTotalProtecao","CadastroVacinacao","setVacina","paciente","setPaciente","dataRetorno","setDataRetorno","vacinaOptions","setVacinaOptions","pacienteOptions","setPacienteOptions","modalIsOpen","setModalIsOpen","qrCodeInfo","setQRCodeInfo","setMessage","vacinas","isOpen","onRequestClose","overlay","zIndex","backgroundColor","content","display","flexDirection","justifyContent","width","height","alignItems","level","includeMargin","getOptionLabel","option","renderInput","params","validaDataRetorno","marginTop","enfermeiroInfo","jwt_decode","payload","_id","doses","enfermeiroNome","enfermeiroCoren","concluido","cadastraVacinacao","mensagem","storage","window","localStorage","Error","set","key","setItem","JSON","stringify","getItem","parse","remove","removeItem","Cookie","getJSON","StoreProvider","children","state","setState","useCallback","newValue","undefined","useStorage","Context","Provider","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3e6611a.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst StoreContext = createContext({\r\n  token: null,\r\n  setToken: () => {}\r\n})\r\n\r\nexport default StoreContext;","const axios = require('axios');\r\n\r\nexport function tokenValidation(token) {\r\n  // chama a api de validação de token do backend\r\n  const corpoChamada = { tipo: \"enfermeiros\", token };\r\n  return axios.post('https://us-central1-vacinapp-1.cloudfunctions.net/authServer/validation', corpoChamada)\r\n  .then(response => 200)\r\n  .catch(error => 403);\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport StoreContext from '../Store/Context';\r\nimport { tokenValidation } from \"../../controllers/token\";\r\n\r\nimport \"./style.css\";\r\n\r\nfunction Header({ alteraTabela }) {\r\n  const { token } = useContext(StoreContext);\r\n  const [valido, setValido] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const accessAllowed = () => {\r\n      return tokenValidation(token).then(status => {\r\n        if (status === 200) {\r\n          setValido(true);\r\n        } else {\r\n          setValido(false);\r\n        }\r\n      })\r\n    }\r\n    accessAllowed();\r\n  }, [token]);\r\n\r\n  const header = () => {\r\n\r\n    if (valido) {\r\n      return (\r\n        <div className=\"container\">\r\n          <h1 className=\"page-header\">VacinApp</h1>\r\n          <nav className=\"navbar\">\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/vacinacao/cadastrar\">\r\n                  <button className=\"item\">Vacinar</button>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/pacientes\">\r\n                  <button className=\"item\">Pacientes</button>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/enfermeiros\">\r\n                  <button className=\"item\">Enfermeiros(as)</button>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/vacinas\">\r\n                  <button className=\"item\">Vacinas</button>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {header()}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import Header from './Header';\r\nexport default Header;","const axios = require('axios');\r\n\r\nexport function login(coren, senha) {\r\n  // faz o login do enfermeiro e recebe um token jwt\r\n  const enfermeiro = { coren, senha };\r\n  const corpoChamada = { tipo: \"enfermeiros\", user: enfermeiro }\r\n\r\n  return axios.post('https://us-central1-vacinapp-1.cloudfunctions.net/authServer/login', corpoChamada).then(response => {\r\n    return response;\r\n  }).catch(error => {\r\n    console.log(error);\r\n    return error;\r\n  })\r\n}\r\n\r\nexport function enviaRegistro(nome, email, coren, senha, admin) {\r\n  // registra o enfermeiro no banco de dados\r\n  const enfermeiro = { nome, email, coren, senha, admin }\r\n  return axios.post('https://us-central1-vacinapp-1.cloudfunctions.net/server/api/enfermeiros', enfermeiro)\r\n  .then(response => response)\r\n  .catch(err => err);\r\n}\r\n\r\nexport function getByField(field, value, token) {\r\n  // procura se existe algum enfermeiro com coren ou email já existente no banco\r\n  let response = {}\r\n  return axios.get(`https://us-central1-vacinapp-1.cloudfunctions.net/server/api/enfermeiros/${field}/${value}`, {headers: { \"Authorization\": `Bearer ${token}` }}).then((res) => {\r\n    console.log(res)\r\n    response = { registros: Array.from(res.data) }\r\n    console.log(response)\r\n    return response;\r\n  }).catch(err => {\r\n    response = { erro: err }\r\n    return response;\r\n  })\r\n}","import React from 'react';\r\nimport ReactLoading from \"react-loading\";\r\n\r\nexport default function Loading() {\r\n  const props = {\r\n    prop: \"spinningBubbles\",\r\n    name: \"SpinningBubbles\"\r\n  }\r\n\r\n  return (\r\n    <ReactLoading type={props.prop} color=\"#fff\"/>\r\n  )\r\n}","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  createMuiTheme,\r\n  withStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport {\r\n  TextField,\r\n  Button\r\n} from \"@material-ui/core\";\r\n\r\nimport StoreContext from \"../Store/Context\";\r\nimport { login } from \"../../controllers/enfermeiros\";\r\nimport { tokenValidation } from \"../../controllers/token\";\r\n\r\nimport './style.css';\r\nimport Loading from \"../Loading/Loading\";\r\n\r\nfunction Login(props) {\r\n  const { classes } = props;\r\n  const history = useHistory();\r\n\r\n  const [coren, setCoren] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n\r\n  const { token, setToken } = useContext(StoreContext);\r\n\r\n  const [erro, setErro] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#5CCFE6'\r\n      }\r\n    },\r\n    spacing: 8\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const accessAllowed = () => {\r\n      return tokenValidation(token).then(status => {\r\n        setIsLoading(false);\r\n        if (status === 200) history.push(\"/pacientes\");\r\n      })\r\n    }\r\n    accessAllowed();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [token]);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    setIsLoading(true);\r\n    login(coren, senha).then(({ data }) => {\r\n      setIsLoading(false);\r\n      console.log(data);\r\n      setToken(data.accessToken);\r\n      history.push('/pacientes');\r\n    }).catch(err => {\r\n      setIsLoading(false);\r\n      setErro(true);\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-login\">\r\n      {\r\n        isLoading\r\n        ? <Loading/>\r\n        : <React.Fragment>\r\n          <h2 className=\"titulo-login\">VacinApp</h2>\r\n          <ThemeProvider theme={theme}>\r\n            <form className=\"formulario-login\" onSubmit={onSubmit}>\r\n              {\r\n                erro && (\r\n                  <h3 className=\"erro\">E-mail/Senha inválidos</h3>\r\n                )\r\n              }\r\n              <TextField\r\n                label=\"COREN\"\r\n                id=\"coren\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                InputProps={{ className: classes.input }}\r\n                onChange={(event) => {\r\n                  setCoren(event.target.value);\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"Senha\"\r\n                id=\"senha\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                type=\"password\"\r\n                style={{ marginRight: 12 }}\r\n                InputProps={{ className: classes.input }}\r\n                fullWidth\r\n                onChange={(event) => {\r\n                  setSenha(event.target.value);\r\n                }}\r\n              />\r\n              <Button variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\">\r\n                <p className=\"reset-a\">\r\n                  Login\r\n                </p>\r\n              </Button>\r\n            </form>\r\n          </ThemeProvider>\r\n        </React.Fragment>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nLogin.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = {\r\n  input: {\r\n    borderRadius: 10,\r\n  },\r\n};\r\n\r\nexport default withStyles(styles)(Login);\r\n","import Login from './Login';\r\nexport default Login;","import Loading from \"./Loading\";\r\nexport default Loading;","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Done from \"@material-ui/icons/Done\";\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport StoreContext from \"../Store/Context\";\r\nimport Loading from \"../Loading\";\r\n\r\nimport { tokenValidation } from \"../../controllers/token\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nfunction Table({ tabela }) {\r\n  const history = useHistory();\r\n\r\n  // colunas/cabeçalho\r\n  const [columns, setColumns] = useState([]);\r\n  // linhas\r\n  const [dadosTabela, setDadosTabela] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // * labels para cada item do banco\r\n  const labels = {\r\n    nome: \"Nome\",\r\n    cpf: \"CPF\",\r\n    email: \"E-mail\",\r\n    dataNasc: \"Data de Nascimento\",\r\n    coren: \"COREN\",\r\n    admin: \"Administrador\",\r\n    doenca: \"Doença\",\r\n    fabricante: \"Fabricante\",\r\n    dose: \"Doses\",\r\n    lote: \"Lote\",\r\n    quantidade: \"Quantidade\",\r\n    prazoMaximoEntreDoses: \"Prazo máximo entre doses\",\r\n    tempoTotalProtecao: \"Tempo total de proteção\",\r\n  };\r\n\r\n  // * labels que não serão exibidas na tabela\r\n  const nonLabels = [\"_id\", \"__v\", \"refreshToken\"];\r\n\r\n  const { token } = useContext(StoreContext);\r\n\r\n  // * Configurações das colunas de admin e ações\r\n  const optionsColumns = {\r\n    admin: {\r\n      // ? renderiza o icone de acordo com status de admin,\r\n      // * caso seja admin: ✅\r\n      // ! caso não seja admin: ❌\r\n      customBodyRender: (value, tableMeta, updateValue) => {\r\n        if (value) {\r\n          return (\r\n            <Tooltip title=\"Sim\">\r\n              <Done color=\"primary\" />\r\n            </Tooltip>\r\n          );\r\n        } else {\r\n          return (\r\n            <Tooltip title=\"Não\">\r\n              <Close color=\"secondary\" />\r\n            </Tooltip>\r\n          );\r\n        }\r\n      },\r\n    },\r\n    acoes: {\r\n      // renderiza o botão de editar para as tabelas de enfermeiros e vacinas\r\n      customBodyRender: () => {\r\n        return (\r\n          // TODO: Funcionalidade a ser implementada\r\n          <button className=\"botao\">Editar</button>\r\n        );\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const accessAllowed = () => {\r\n      // * verifica se o usuário está logado para poder accesar a página de tabelas\r\n      return tokenValidation(token).then((status) => {\r\n        if (status === 403) {\r\n          history.push(\"/\");\r\n        }\r\n      });\r\n    };\r\n    const getDadosTabela = () => {\r\n      // * pega os dados da tabela que foi selecionada\r\n      setIsLoading(true);\r\n      axios\r\n        .get(\r\n          `https://us-central1-vacinapp-1.cloudfunctions.net/server/api/${tabela}`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          setDadosTabela(Array.from(response.data));\r\n          renderCabecalho(Array.from(response.data));\r\n          setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    accessAllowed();\r\n    getDadosTabela();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tabela]);\r\n\r\n  // * configurações de estilo da tabela\r\n  const getMuiTheme = () =>\r\n    createMuiTheme({\r\n      overrides: {\r\n        MUIDataTable: {\r\n          paper: {\r\n            borderRadius: 10,\r\n            border: \"none\",\r\n          },\r\n        },\r\n        MUIDataTableToolbarSelect: {\r\n          root: {\r\n            borderTopLeftRadius: 10,\r\n            borderTopRightRadius: 10,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n  const renderCabecalho = (dadosTabela) => {\r\n    // * renderiza o cabeçalho de acordo com as chaves recebidas do banco\r\n    const col = [];\r\n    if (dadosTabela.length > 0) {\r\n      // pega as chaves do objeto\r\n      const cabecalho = Object.keys(dadosTabela[0]);\r\n\r\n      // remove todas as chaves que são caracterizadas como \"nonLabel\"\r\n      // como as chaves incluidas pelo próprio mongo, como \"_id\" e \"__v\"\r\n      for (let index = 0; index < cabecalho.length; index++) {\r\n        let item = cabecalho[index];\r\n        if (nonLabels.includes(item)) {\r\n          cabecalho.splice(index, 1);\r\n        }\r\n      }\r\n\r\n      // para cada item do cabecalhos (array de chaves do objeto)\r\n      // é passado o nome, a label que é configurada no objeto \"labels\",\r\n      // e as opções caso tenha (como no caso do admin)\r\n      for (let item of cabecalho) {\r\n        col.push({\r\n          name: item,\r\n          label: labels[item],\r\n          options: optionsColumns[item],\r\n        });\r\n      }\r\n      // ! se for não for a tabela de pacientes, a coluna \"Ações\" com os botões editar também é carregada\r\n      if (tabela !== \"pacientes\") {\r\n        col.push({\r\n          name: \"acoes\",\r\n          label: \"Ações\",\r\n          options: optionsColumns.acoes,\r\n        });\r\n      }\r\n      setColumns(col);\r\n    }\r\n  };\r\n\r\n  // * configurações das linhas\r\n  const options = {\r\n    filter: true,\r\n    filterType: \"dropdown\",\r\n    selectableRowsHideCheckboxes: true,\r\n    selectableRows: \"single\",\r\n    responsive: \"vertical\",\r\n    rowsPerPage:8,\r\n    rowsPerPageOptions: [],\r\n    customToolbarSelect: () => {},\r\n    customToolbar: () => {\r\n      if (tabela !== \"pacientes\") {\r\n        return (\r\n          <Tooltip title=\"Adicionar\">\r\n            <Link to={`/${tabela}/cadastrar`}>\r\n              <IconButton>\r\n                <AddIcon />\r\n              </IconButton>\r\n            </Link>\r\n          </Tooltip>\r\n        );\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-table\">\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"sub-container-table\">\r\n          <MuiThemeProvider theme={getMuiTheme()}>\r\n            <MUIDataTable\r\n              className=\"table\"\r\n              title={\r\n                tabela.charAt(0).toUpperCase() +\r\n                tabela.slice(\r\n                  1\r\n                ) /* pega a primeira letra da string e a coloca em maiúsculo. Ex: enfermeiros => Enfermeiros*/\r\n              }\r\n              columns={columns}\r\n              data={dadosTabela}\r\n              options={options}\r\n            />\r\n          </MuiThemeProvider>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import Table from './Table';\r\nexport default Table;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { createMuiTheme, withStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { TextField, Button, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\n\r\n\r\nimport { tokenValidation } from \"../../controllers/token\";\r\nimport { enviaRegistro, getByField } from \"../../controllers/enfermeiros\";\r\nimport \"./style.css\";\r\n\r\nimport Loading from '../Loading';\r\nimport StoreContext from '../Store/Context';\r\n\r\n\r\nfunction CadastroEnfermeiro(props) {\r\n  const { classes } = props;\r\n  const history = useHistory();\r\n\r\n  const { token } = useContext(StoreContext);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [coren, setCoren] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [confirmarSenha, setConfirmarSenha] = useState(\"\");\r\n  const [admin, setAdmin] = useState(false);\r\n\r\n  const [formularioValido, setFormularioValido] = useState(false);\r\n  const [erros, setErros] = useState({\r\n    nome: false,\r\n    coren: false,\r\n    email: false,\r\n    senha: false,\r\n    confirmarSenha: false\r\n  });\r\n  const [preenchido, setPreenchido] =  useState({\r\n    nome: {value: false, message: \"\"},\r\n    email: {value: false, message: \"\"},\r\n    coren: {value: false, message: \"\"},\r\n    senha: {value: false, message: \"\"},\r\n    confirmarSenha: {value: false, message: \"\"}\r\n  });\r\n\r\n  useEffect(() => {\r\n    const accessAllowed = () => {\r\n      // * verifica se o usuário está logado para poder accesar a página de tabelas\r\n      return tokenValidation(token).then((status) => {\r\n        if (status === 403) {\r\n          history.push(\"/\");\r\n        }\r\n      });\r\n    };\r\n    accessAllowed();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n\r\n  const validaFormulario = (preenchido) =>{\r\n    for (let [key, value] of Object.entries(preenchido)) {\r\n      if (!value.value) {\r\n        setFormularioValido(false)\r\n        return;\r\n      }\r\n    }\r\n    setFormularioValido(true);\r\n  }\r\n\r\n  const validaNome = (nome, message=\"\") => {\r\n    // * nome deve conter pelo menos um sobrenome\r\n    if (nome.split(\" \").length >= 2) {\r\n      setPreenchido({...preenchido, nome: {value: true, message: \"\"}})\r\n      validaFormulario({...preenchido, nome: {value: true, message: \"\"}})\r\n    } else {\r\n      setPreenchido({...preenchido, nome: {value: false, message }})\r\n      validaFormulario({...preenchido, nome: {value: false, message}})\r\n    }\r\n  }\r\n\r\n\r\n  const validaEmail = (email, message=\"\") => {\r\n    // * e-mail deve seguir o padrão abaixo e não existir no banco de dados\r\n    // ? {algumacoisa}@{algumacoisa}.{algumacoisa}\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (re.test(email.toLowerCase())) {\r\n      getByField('email', email, token).then((emails) => {\r\n        console.log(emails)\r\n        let tamanho;\r\n        try {\r\n          tamanho = emails.registros.length;\r\n        } catch (e) {\r\n          tamanho = 0\r\n        }\r\n        if (!emails.erros && tamanho === 0 ){\r\n          setPreenchido({...preenchido, email: {value: true, message: \"\"}});\r\n          validaFormulario({...preenchido, email: {value: true, message: \"\"}});\r\n        } else {\r\n          setPreenchido({...preenchido, email: {value: false, message: \"E-mail já cadastrado.\"}});\r\n          validaFormulario({...preenchido, email: {value: false, message: \"E-mail já cadastrado.\"}});\r\n        }\r\n      });\r\n    } else {\r\n      setPreenchido({...preenchido, email: { value: false, message }});\r\n      validaFormulario({...preenchido, email:{ value: false, message }});\r\n    }\r\n  }\r\n\r\n  const validaCoren = (coren, message=\"\") => {\r\n    // * coren deve seguir o padrão abaixo e não existir no banco de dados\r\n    // ? 3numeros.3numeros.3numeros-2letras\r\n    const re = /^([0-9]{3}\\.?[0-9]{3}\\.?[0-9]{3}-?[a-zA-Z]{2})$/;\r\n    if (re.test(coren.toUpperCase()) && coren.split('-').length === 2) {\r\n      getByField('coren', coren, token).then((corens) => {\r\n        let tamanho;\r\n        try {\r\n          tamanho = corens.registros.length;\r\n        } catch (e) {\r\n          tamanho = 0;\r\n        }\r\n        if (!corens.erros && tamanho === 0 ){\r\n          setPreenchido({...preenchido, coren: {value: true, message: \"\"}});\r\n          validaFormulario({...preenchido, coren: {value: true, message: \"\"}});\r\n        } else {\r\n          setPreenchido({...preenchido, coren: {value: false, message: \"COREN já cadastrado.\"}});\r\n          validaFormulario({...preenchido, coren: {value: false, message: \"COREN já cadastrado.\"}});\r\n        }\r\n      })\r\n    } else {\r\n      setPreenchido({...preenchido, coren: {value: false, message}});\r\n      validaFormulario({...preenchido, coren: {value: false, message}});\r\n    }\r\n  }\r\n\r\n  const validaSenha = (senha, message=\"\") => {\r\n    // * senha deve conter pelo menos 5 caracteres\r\n    if(senha.length >= 5) {\r\n      setPreenchido({...preenchido, senha: {value: true, message: \"\"}});\r\n      validaFormulario({...preenchido, senha: {value: true, message: \"\"}});\r\n    } else {\r\n      setPreenchido({...preenchido, senha: {value: false, message}});\r\n      validaFormulario({...preenchido, senha: {value: false, message}});\r\n    }\r\n  }\r\n\r\n  const validaConfirmarSenha = (confirmarSenha, message=\"\") => {\r\n    // * confirma senha deve ser igual a senha\r\n    if (confirmarSenha === senha) {\r\n      setPreenchido({...preenchido, confirmarSenha: {value: true, message: \"\"}});\r\n      validaFormulario({...preenchido, confirmarSenha: {value: true, message: \"\"}});\r\n    } else {\r\n      setPreenchido({...preenchido, confirmarSenha: {value: false, message}});\r\n      validaFormulario({...preenchido, confirmarSenha: {value: false, message}});\r\n    }\r\n  }\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#5CCFE6'\r\n      }\r\n    },\r\n    spacing: 8\r\n  });\r\n\r\n  return (\r\n    <div className=\"container-cadastro\">\r\n      {\r\n        isLoading\r\n        ? <Loading/>\r\n        :\r\n        <React.Fragment>\r\n          <h2 className=\"titulo-cadastro\">Cadastrar Enfermeiro</h2>\r\n          <ThemeProvider theme={theme}>\r\n            <form className=\"formulario-cadastro\">\r\n              <TextField\r\n                label=\"Nome\"\r\n                id=\"nome\"\r\n                helperText={preenchido.nome.message}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                error={erros.nome}\r\n                InputProps={{ className: classes.input }}\r\n                onChange={(event) => {\r\n                  let nome = event.target.value.trim();\r\n                  setNome(nome);\r\n                  validaNome(nome);\r\n                }}\r\n                onBlur={() => {\r\n                  validaNome(nome, \"É necessário pelo menos um sobrenome.\")\r\n                  setErros({...erros, nome: !preenchido.nome.value})\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"E-mail\"\r\n                id=\"email\"\r\n                type=\"email\"\r\n                helperText={preenchido.email.message}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                error={erros.email}\r\n                InputProps={{ className: classes.input }}\r\n                onChange={(event) => {\r\n                  let email = event.target.value.trim();\r\n                  console.log(email);\r\n                  setEmail(email);\r\n                  validaEmail(email);\r\n                }}\r\n                onBlur={() => {\r\n                  validaEmail(email, \"E-mail inválido.\")\r\n                  setErros({...erros, email: !preenchido.email.value});\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"COREN\"\r\n                id=\"coren\"\r\n                helperText={preenchido.coren.message}\r\n                error={erros.coren}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                InputProps={{ className: classes.input }}\r\n                onChange={(event) => {\r\n                  let coren = event.target.value.trim();\r\n                  if (coren.length > 14) {\r\n                    coren = coren.substring(0, 8);\r\n                  }\r\n                  setCoren(coren);\r\n                  validaCoren(coren);\r\n                }}\r\n                onBlur={() => {\r\n                  validaCoren(coren, \"COREN inválido! Siga o modelo: 000.000.000-SP.\");\r\n                  setErros({...erros, coren: !preenchido.coren.value});\r\n                }}\r\n              />\r\n              <div className=\"senhas\">\r\n                <TextField\r\n                  label=\"Senha\"\r\n                  id=\"senha\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  helperText={preenchido.senha.message}\r\n                  error={erros.senha}\r\n                  style={{ marginRight: 12 }}\r\n                  InputProps={{ className: classes.input }}\r\n                  fullWidth\r\n                  onChange={(event) => {\r\n                    let senha = event.target.value.trim();\r\n                    setSenha(senha);\r\n                    validaSenha(senha);\r\n                  }}\r\n                  onBlur={() => {\r\n                    validaSenha(senha, \"Senha deve conter pelo menos 5 caractéres.\");\r\n                    setErros({...erros, senha: !preenchido.senha.value});\r\n                  }}\r\n                />\r\n                <TextField\r\n                  label=\"Confirmar Senha\"\r\n                  id=\"confirmarSenha\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  helperText={preenchido.confirmarSenha.message}\r\n                  error={erros.confirmarSenha}\r\n                  style={{ marginLeft: 12 }}\r\n                  InputProps={{ className: classes.input }}\r\n                  fullWidth\r\n                  onChange={(event) => {\r\n                    let confirmarSenha = event.target.value.trim();\r\n                    setConfirmarSenha(confirmarSenha);\r\n                    validaConfirmarSenha(confirmarSenha);\r\n                  }}\r\n                  onBlur={() => {\r\n                    validaConfirmarSenha(confirmarSenha, \"A confirmação da senha deve ser igual a senha.\");\r\n                    setErros({...erros, confirmarSenha: !preenchido.confirmarSenha.value});\r\n                  }}\r\n                />\r\n              </div>\r\n              <FormControlLabel\r\n                label=\"Administrador\"\r\n                control={\r\n                  <Checkbox color=\"primary\" onChange={(event) => {\r\n                    setAdmin(event.target.checked);\r\n                  }}/>\r\n                }/>\r\n              <Button disabled={!formularioValido} variant=\"contained\" color=\"primary\" size=\"large\" onClick={async () => {\r\n                setIsLoading(true);\r\n                await enviaRegistro(nome, email, coren, senha, admin);\r\n                setIsLoading(false);\r\n                history.push(\"/enfermeiros\");\r\n              }}><p className=\"reset-a\">Cadastrar Enfermeiro</p></Button>\r\n            </form>\r\n          </ThemeProvider>\r\n        </React.Fragment>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nCadastroEnfermeiro.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = {\r\n  input: {\r\n    borderRadius: 10,\r\n  },\r\n\r\n};\r\n\r\nexport default withStyles(styles)(CadastroEnfermeiro);\r\n","import CadastroEnfermeiro from './CadastroEnfermeiro';\r\nexport default CadastroEnfermeiro;","const axios = require('axios');\r\n\r\nexport function enviaRegistro(doenca, fabricante, dose, lote, quantidade, prazoMaximoEntreDoses, tempoTotalProtecao) {\r\n  // chama api do backend para cadastrar a vacina no banco\r\n  const vacina = { doenca, fabricante, dose, lote, quantidade, prazoMaximoEntreDoses, tempoTotalProtecao }\r\n  axios.post('https://us-central1-vacinapp-1.cloudfunctions.net/server/api/vacinas', vacina)\r\n  .then(response => console.log(response))\r\n  .catch(err => console.log(err));\r\n}\r\n\r\nexport function getVacinas() {\r\n  // pega as vacinas do banco\r\n  return axios.get('https://us-central1-vacinapp-1.cloudfunctions.net/server/api/vacinas')\r\n  .then(response => response.data)\r\n  .catch(err => err);\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { createMuiTheme, withStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nimport StoreContext from \"../Store/Context\";\r\nimport Loading from '../Loading';\r\n\r\nimport { tokenValidation } from \"../../controllers/token\";\r\nimport { enviaRegistro } from \"../../controllers/vacinas\";\r\nimport \"./style.css\";\r\n\r\nfunction CadastroVacina(props) {\r\n  const { classes } = props;\r\n  const history = useHistory();\r\n\r\n  const { token } = useContext(StoreContext)\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [doenca, setDoenca] = useState(\"\");\r\n  const [fabricante, setFabricante] = useState(\"\");\r\n  const [dose, setDose] = useState(\"\");\r\n  const [lote, setLote] = useState(\"\");\r\n  const [quantidade, setQuantidade] = useState(\"\");\r\n  const [prazoMaximoEntreDoses, setPrazoMaximoEntreDoses] = useState(\"\");\r\n  const [tempoTotalProtecao, setTempoTotalProtecao] = useState(\"\");\r\n\r\n  const [formularioValido, setFormularioValido] = useState(false);\r\n  const [erros, setErros] = useState({\r\n    doenca: false,\r\n    dose: false,\r\n    lote: false,\r\n    quantidade: false,\r\n    prazoMaximoEntreDoses: false,\r\n    tempoTotalProtecao: false\r\n  });\r\n  const [preenchido, setPreenchido] =  useState({\r\n    doenca: false,\r\n    dose: false,\r\n    lote: false,\r\n    quantidade: false,\r\n    prazoMaximoEntreDoses: false,\r\n    tempoTotalProtecao: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    const accessAllowed = () => {\r\n      // * verifica se o usuário está logado para poder accesar a página de tabelas\r\n      return tokenValidation(token).then((status) => {\r\n        if (status === 403) {\r\n          history.push(\"/\");\r\n        }\r\n      });\r\n    };\r\n    accessAllowed();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n\r\n  const validaFormulario = (preenchido) =>{\r\n    for (let [key, value] of Object.entries(preenchido)) {\r\n      if (!value) {\r\n        setFormularioValido(false)\r\n        return;\r\n      }\r\n    }\r\n    setFormularioValido(true);\r\n  }\r\n\r\n  const validaDoenca = (doenca) => {\r\n    // * nome da doença não pode estar vazia\r\n    if (doenca.length > 0) {\r\n      setPreenchido({...preenchido, doenca:true})\r\n      validaFormulario({...preenchido, doenca: true})\r\n    } else {\r\n      setPreenchido({...preenchido, doenca:false})\r\n      validaFormulario({...preenchido, doenca: false})\r\n    }\r\n  }\r\n\r\n\r\n  const validaDose = (dose) => {\r\n    // * dose não pode ser menor do que 0\r\n    if (dose > 0) {\r\n      setPreenchido({...preenchido, dose: true});\r\n      validaFormulario({...preenchido, dose: true});\r\n    } else {\r\n      setPreenchido({...preenchido, dose: false});\r\n      validaFormulario({...preenchido, dose: false});\r\n    }\r\n  }\r\n\r\n  const validaLote = (lote) => {\r\n    // * lote não pode estar vazio\r\n    if(lote.length > 0) {\r\n      setPreenchido({...preenchido, lote: true});\r\n      validaFormulario({...preenchido, lote: true});\r\n    } else {\r\n      setPreenchido({...preenchido, lote:false});\r\n      validaFormulario({...preenchido, lote:false});\r\n    }\r\n  }\r\n\r\n  const validaQuantidade = (quantidade) => {\r\n    // * quantidade não pode ser menor do que 0\r\n    if (quantidade > 0) {\r\n      setPreenchido({...preenchido, quantidade: true});\r\n      validaFormulario({...preenchido, quantidade: true});\r\n    } else {\r\n      setPreenchido({...preenchido, quantidade: false});\r\n      validaFormulario({...preenchido, quantidade: false});\r\n    }\r\n  }\r\n\r\n  const validaPrazoMaximoEntreDoses = (prazoMaximoEntreDoses) => {\r\n    // * prazoMaximoEntreDoses não pode ser menor do que 0\r\n    if (prazoMaximoEntreDoses > 0) {\r\n      setPreenchido({...preenchido, prazoMaximoEntreDoses: true});\r\n      validaFormulario({...preenchido, prazoMaximoEntreDoses: true});\r\n    } else {\r\n      setPreenchido({...preenchido, prazoMaximoEntreDoses: false});\r\n      validaFormulario({...preenchido, prazoMaximoEntreDoses: false});\r\n    }\r\n  }\r\n\r\n  const validaTempoTotalProtecao = (tempoTotalProtecao) => {\r\n    // * tempoTotalProtecao não pode ser menor do que 0\r\n    if (tempoTotalProtecao > 0) {\r\n      setPreenchido({...preenchido, tempoTotalProtecao: true});\r\n      validaFormulario({...preenchido, tempoTotalProtecao: true});\r\n    } else {\r\n      setPreenchido({...preenchido, tempoTotalProtecao: false});\r\n      validaFormulario({...preenchido, tempoTotalProtecao: false});\r\n    }\r\n  }\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#5CCFE6'\r\n      }\r\n    },\r\n    spacing: 8\r\n  });\r\n\r\n  return (\r\n    <div className=\"container-cadastro\">\r\n      {\r\n        isLoading\r\n        ? <Loading/>\r\n        :\r\n        <React.Fragment>\r\n          <h2 className=\"titulo-cadastro\">Cadastrar Vacina</h2>\r\n          <ThemeProvider theme={theme}>\r\n            <form className=\"formulario-cadastro\">\r\n              <TextField\r\n                label=\"Doença\"\r\n                id=\"doenca\"\r\n                helperText=\"Ex.: Covid19, Febre Amarela, HPV\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                error={erros.doenca}\r\n                InputProps={{ className: classes.input }}\r\n                onChange={(event) => {\r\n                  let doenca = event.target.value.trim();\r\n                  setDoenca(doenca);\r\n                  validaDoenca(doenca);\r\n                }}\r\n                onBlur={() => {\r\n                  setErros({...erros, doenca: !preenchido.doenca})\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"Fabricante\"\r\n                id=\"fabricante\"\r\n                type=\"text\"\r\n                helperText=\"Ex.: CoronaVac, \"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                InputProps={{ className: classes.input }}\r\n                onChange={(event) => {\r\n                  let fabricante = event.target.value.trim();\r\n                  setFabricante(fabricante);\r\n                }}\r\n              />\r\n              <TextField\r\n                label=\"Doses\"\r\n                id=\"doses\"\r\n                helperText=\"Quantidade de doses que são necessárias para o paciente tomar.\"\r\n                error={erros.dose}\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                InputProps={{ className: classes.input }}\r\n                onChange={(event) => {\r\n                  let dose = event.target.value.trim();\r\n                  setDose(dose);\r\n                  validaDose(dose);\r\n                }}\r\n                onBlur={() => {\r\n                  setErros({...erros, dose: !preenchido.dose});\r\n                }}\r\n              />\r\n              <div className=\"lote-info\">\r\n                <TextField\r\n                  label=\"Lote\"\r\n                  id=\"lote\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  type=\"text\"\r\n                  helperText=\"Código de lote das vacinas\"\r\n                  error={erros.lote}\r\n                  style={{ marginRight: 12 }}\r\n                  InputProps={{ className: classes.input }}\r\n                  fullWidth\r\n                  onChange={(event) => {\r\n                    let lote = event.target.value.trim();\r\n                    setLote(lote);\r\n                    validaLote(lote);\r\n                  }}\r\n                  onBlur={() => {\r\n                    setErros({...erros, lote: !preenchido.lote})\r\n                  }}\r\n                />\r\n                <TextField\r\n                  label=\"Quantidade\"\r\n                  id=\"quantidade\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  type=\"number\"\r\n                  helperText=\"Quantidade de vacinas que vieram no lote\"\r\n                  error={erros.quantidade}\r\n                  style={{ marginLeft: 12 }}\r\n                  InputProps={{ className: classes.input }}\r\n                  fullWidth\r\n                  onChange={(event) => {\r\n                    let quantidade = event.target.value.trim();\r\n                    setQuantidade(quantidade);\r\n                    validaQuantidade(quantidade);\r\n                  }}\r\n                  onBlur={() => {\r\n                    setErros({...erros, quantidade: !preenchido.quantidade})\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"lote-info\">\r\n                <TextField\r\n                  label=\"Tempo max. entre doses\"\r\n                  id=\"lote\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  type=\"number\"\r\n                  helperText=\"Em dias\"\r\n                  error={erros.prazoMaximoEntreDoses}\r\n                  style={{ marginRight: 12 }}\r\n                  InputProps={{ className: classes.input }}\r\n                  fullWidth\r\n                  onChange={(event) => {\r\n                    let prazoMaxEntreDoses = event.target.value.trim();\r\n                    setPrazoMaximoEntreDoses(prazoMaxEntreDoses);\r\n                    validaPrazoMaximoEntreDoses(prazoMaxEntreDoses);\r\n                  }}\r\n                  onBlur={() => {\r\n                    setErros({...erros, prazoMaximoEntreDoses: !preenchido.prazoMaximoEntreDoses})\r\n                  }}\r\n                />\r\n                <TextField\r\n                  label=\"Tempo total de proteção\"\r\n                  id=\"quantidade\"\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  type=\"number\"\r\n                  helperText=\"Em meses\"\r\n                  error={erros.tempoTotalProtecao}\r\n                  style={{ marginLeft: 12 }}\r\n                  InputProps={{ className: classes.input }}\r\n                  fullWidth\r\n                  onChange={(event) => {\r\n                    let tempoTotalProtecao = event.target.value.trim();\r\n                    setTempoTotalProtecao(tempoTotalProtecao);\r\n                    validaTempoTotalProtecao(tempoTotalProtecao);\r\n                  }}\r\n                  onBlur={() => {\r\n                    setErros({...erros, tempoTotalProtecao: !preenchido.tempoTotalProtecao})\r\n                  }}\r\n                />\r\n              </div>\r\n              <Button disabled={!formularioValido} variant=\"contained\" color=\"primary\" size=\"large\" onClick={async () => {\r\n                setIsLoading(true);\r\n                await enviaRegistro(doenca, fabricante, dose, lote, quantidade, prazoMaximoEntreDoses, tempoTotalProtecao);\r\n                setIsLoading(false);\r\n                history.push(\"/vacinas\");\r\n              }}><p className=\"reset-a\">Cadastrar Vacina</p></Button>\r\n            </form>\r\n          </ThemeProvider>\r\n        </React.Fragment>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nCadastroVacina.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = {\r\n  input: {\r\n    borderRadius: 10,\r\n  },\r\n\r\n};\r\n\r\nexport default withStyles(styles)(CadastroVacina);\r\n","import CadastroVacina from './CadastroVacina';\r\nexport default CadastroVacina;","const axios = require('axios');\r\n\r\nexport function getPacientes() {\r\n  return axios.get('https://us-central1-vacinapp-1.cloudfunctions.net/server/api/pacientes')\r\n  .then(response => response.data)\r\n  .catch(err => err);\r\n}","import jwt_decode from \"jwt-decode\";\r\n\r\nconst axios = require('axios');\r\n\r\nexport function cadastraVacinacao(vacina, paciente, dataRetorno, token) {\r\n  // faz o decode do token do infermeiro para pegar o nome e o coren do mesmo\r\n  const enfermeiroInfo = jwt_decode(token);\r\n\r\n  // pega as informações recebidas e constroi o corpo da chamdada\r\n  const payload = {\r\n    paciente: paciente._id,\r\n    doenca: vacina.doenca,\r\n    doses: vacina.dose,\r\n    vacina: {\r\n      fabricante: vacina.fabricante,\r\n      lote: vacina.lote,\r\n      enfermeiroNome: enfermeiroInfo.nome,\r\n      enfermeiroCoren: enfermeiroInfo.coren,\r\n      concluido: false,\r\n    },\r\n    dataRetorno: dataRetorno,\r\n    prazoMaximoEntreDoses: vacina.prazoMaximoEntreDoses,\r\n    tempoTotalProtecao: vacina.tempoTotalProtecao\r\n  }\r\n  console.log(payload);\r\n\r\n  // chama a api para fazer o registro da vacinação no banco de dados\r\n  return axios.post('https://us-central1-vacinapp-1.cloudfunctions.net/server/api/vacinacao', payload, {headers: { \"Authorization\": `Bearer ${token}` }})\r\n  .then(response => response.data)\r\n  .catch(err => err.response.data);\r\n}\r\n\r\n// NÃO IMPLEMENTADA\r\nexport async function estaConcluida(id, token) {\r\n  // função para verificar se a vacina está concluida para fechar o código QR e resetar o formulário de vacinação\r\n  return axios.get(`https://us-central1-vacinapp-1.cloudfunctions.net/api/vacinacao/concluida/${id}`, {headers: { \"Authorization\": `Bearer ${token}` }})\r\n  .then(response => response.data)\r\n  .catch(err => err);\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Modal from 'react-modal';\r\nimport QRCode from 'react-qr-code';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  createMuiTheme,\r\n  withStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport AutoComplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport StoreContext from '../Store/Context';\r\nimport { tokenValidation } from \"../../controllers/token\";\r\nimport { getVacinas } from \"../../controllers/vacinas\";\r\nimport { getPacientes } from \"../../controllers/pacientes\";\r\nimport { cadastraVacinacao, estaConcluida } from \"../../controllers/vacinacao\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction CadastroVacinacao(props) {\r\n  const { classes } = props;\r\n  const history = useHistory();\r\n\r\n  const [vacina, setVacina] = useState({});\r\n  const [paciente, setPaciente] = useState({});\r\n  const [dataRetorno, setDataRetorno] = useState({});\r\n\r\n  const [vacinaOptions, setVacinaOptions] = useState([]);\r\n  const [pacienteOptions, setPacienteOptions] = useState([]);\r\n  const [dosesOptions, setDosesOptions] = useState([]);\r\n\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [qrCodeInfo, setQRCodeInfo] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const [formularioValido, setFormularioValido] = useState(false);\r\n  const [erros, setErros] = useState({\r\n    vacina: false,\r\n    paciente: false,\r\n    dataRetorno: false,\r\n  });\r\n  const [preenchido, setPreenchido] = useState({\r\n    vacina: false,\r\n    paciente: false,\r\n    dataRetorno: false,\r\n  });\r\n\r\n  const { token } = useContext(StoreContext);\r\n  const [valido, setValido] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const accessAllowed = () => {\r\n      return tokenValidation(token).then(status => {\r\n        if (status === 403) {\r\n          history.push('/');\r\n        }\r\n      })\r\n    }\r\n    accessAllowed();\r\n    getVacinas().then((response) => {\r\n      const vacinas = [];\r\n      for (let vacina of response) {\r\n        if (vacina.quantidade > 0) {\r\n          vacinas.push(vacina);\r\n        }\r\n      }\r\n      setVacinaOptions(vacinas);\r\n    });\r\n    getPacientes().then((response) => {\r\n      setPacienteOptions(response);\r\n    });\r\n  }, []);\r\n\r\n  const validaFormulario = (preenchido) => {\r\n    // * verifica se todos os campos estão preenchidos corretamente para liberar o botão\r\n    for (let [key, value] of Object.entries(preenchido)) {\r\n      if (!value) {\r\n        setFormularioValido(false);\r\n        return;\r\n      }\r\n    }\r\n    setFormularioValido(true);\r\n  };\r\n\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#5CCFE6\",\r\n      },\r\n    },\r\n    spacing: 8,\r\n  });\r\n\r\n  const selecionaVacina = (event, vacina) => {\r\n    // *  verifica se o que o usúario digitou/selecionou, existe na lista de vacinas\r\n    if (vacinaOptions.includes(vacina)) {\r\n      setVacina(vacina);\r\n      setPreenchido({...preenchido, vacina: true});\r\n      validaFormulario({...preenchido, vacina: true});\r\n    } else {\r\n      setPreenchido({...preenchido, vacina: false});\r\n      validaFormulario({...preenchido, vacina: false});\r\n    }\r\n\r\n  };\r\n\r\n  const selecionaPaciente = (event, paciente) => {\r\n    // * verifica se o que o usúario digitou/selecionou, existe na lista de pacientes\r\n    if (pacienteOptions.includes(paciente)) {\r\n      setPaciente(paciente);\r\n      setPreenchido({...preenchido, paciente: true});\r\n      validaFormulario({...preenchido, paciente: true});\r\n    } else {\r\n      setPreenchido({...preenchido, paciente: false});\r\n      validaFormulario({...preenchido, paciente: false});\r\n    }\r\n  };\r\n\r\n  const validaDataRetorno = (dataRetorno) => {\r\n    // * verifica se a data está no formato correto\r\n    // ? regex => {dois numeros}/{dois numeros}/{quatro numeros}\r\n    const date_regex = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n    if (date_regex.test(dataRetorno)) { // TODO: Validar se é uma data depois do dia de hoje\r\n      setPreenchido({...preenchido, dataRetorno: true});\r\n      validaFormulario({...preenchido, dataRetorno: true});\r\n    } else {\r\n      setPreenchido({...preenchido, dataRetorno: false});\r\n      validaFormulario({...preenchido, dataRetorno: false});\r\n    }\r\n  }\r\n\r\n  // TODO: A ser implementada\r\n  const verificaPendencias = async (id) => {\r\n    let timeout = false;\r\n    let concluido = false;\r\n\r\n    setTimeout(() => {\r\n      timeout = true;\r\n    }, 300000);\r\n\r\n\r\n    while (!(timeout || concluido)) {\r\n      concluido = await estaConcluida(id, token);\r\n    }\r\n\r\n    setModalIsOpen(false);\r\n\r\n  }\r\n\r\n  const geraQrCode = () => {\r\n    console.log(\"Chamando\")\r\n    // cadastra vacinação no banco\r\n    cadastraVacinacao(vacina, paciente, dataRetorno, token).then(response => {\r\n      // verifica se a resposta tem o id da vacinação\r\n      if ('id' in response) {\r\n        // * caso tenha, ele coloca a mensagem e as informações para gerar o QR Code\r\n        setMessage(response.mensagem);\r\n        setQRCodeInfo(`${response.id} ${response.dose}`); // 123abc 0\r\n      } else {\r\n        // ! caso não tenha, ele só coloca a mensagem e não gera o QR Code\r\n        setMessage(response.mensagem);\r\n        setQRCodeInfo(\"\");\r\n      }\r\n      setModalIsOpen(true);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-cadastro\">\r\n      <Modal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)} style={{\r\n        overlay: {\r\n          zIndex: 999,\r\n          backgroundColor: 'rgba(0, 0, 0, 0.45)'\r\n        },\r\n        content: {\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-around\",\r\n          width: 500,\r\n          height: 500,\r\n          alignItems:\"center\",\r\n          margin: 'auto',\r\n        }\r\n      }}>\r\n        <h2>{message}</h2>\r\n        {\r\n        qrCodeInfo && \r\n          <QRCode\r\n            value={qrCodeInfo}\r\n            size={450}\r\n            level={\"H\"}\r\n            includeMargin={true}/>\r\n        }\r\n      </Modal>\r\n      <h2 className=\"titulo-cadastro\">Vacinar</h2>\r\n      <ThemeProvider theme={theme}>\r\n        <form className=\"formulario-cadastro\">\r\n          <AutoComplete\r\n            options={vacinaOptions}\r\n            getOptionLabel={(option) => `${option.doenca} - ${option.fabricante} - ${option.lote}`}\r\n            variant=\"contained\"\r\n            onChange={selecionaVacina}\r\n            renderInput={(params) => {\r\n              return (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Vacina\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{...params.InputProps ,className: classes.input }}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n          <AutoComplete\r\n            options={pacienteOptions}\r\n            getOptionLabel={(option) => `${option.nome} ${option.cpf}`}\r\n            variant=\"contained\"\r\n            onChange={selecionaPaciente}\r\n            renderInput={(params) => {\r\n              return (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Paciente\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{...params.InputProps ,className: classes.input }}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Data de Retorno\"\r\n            id=\"tipo\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputProps={{ className: classes.input }}\r\n            onChange={(event) => {\r\n              let dataRetorno = event.target.value.trim();\r\n              setDataRetorno(dataRetorno);\r\n              validaDataRetorno(dataRetorno);\r\n            }}\r\n          />\r\n          <Button\r\n            disabled={!formularioValido}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            style={{ marginTop: 8 }}\r\n            onClick={geraQrCode}\r\n          >\r\n            <p className=\"reset-a\">\r\n              Vacinar\r\n            </p>\r\n          </Button>\r\n        </form>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nCadastroVacinacao.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst styles = {\r\n  input: {\r\n    borderRadius: 10,\r\n  },\r\n};\r\n\r\nexport default withStyles(styles)(CadastroVacinacao);\r\n","import CadastroVacinacao from './CadastroVacinacao';\r\nexport default CadastroVacinacao;","import Cookie from 'js-cookie';\r\n\r\nconst storage = {};\r\n\r\n// Safari in incognito has local storage, but size 0\r\n// This system falls back to cookies in that situation\r\ntry {\r\n  if (!window.localStorage) {\r\n    throw Error('no local storage');\r\n  }\r\n\r\n  // Setup simple local storage wrapper\r\n  storage.set = (key, value) => localStorage.setItem(key, JSON.stringify(value));\r\n  storage.get = (key) => {\r\n    const item = localStorage.getItem(key);\r\n    try {\r\n      return JSON.parse(item);\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n  storage.remove = key => localStorage.removeItem(key);\r\n} catch (e) {\r\n  storage.set = Cookie.set;\r\n  storage.get = Cookie.getJSON;\r\n  storage.remove = Cookie.remove;\r\n}\r\n\r\nexport default storage;","import React from \"react\";\r\nimport Context from \"./Context\";\r\nimport useStorage from \"../../utils/useStorage\";\r\n\r\nconst StoreProvider = ({ children }) => {\r\n  // * Context para passar o token entre a aplicação\r\n\r\n  const [token, setToken] = useStorage(\"token\");\r\n\r\n  return (\r\n    <Context.Provider value={{ token, setToken }}>{children}</Context.Provider>\r\n  );\r\n};\r\n\r\nexport default StoreProvider;\r\n","import { useCallback, useState } from 'react';\r\nimport storage from './storage';\r\n\r\nexport default function useStorage(key) {\r\n  const [state, setState] = useState(() => storage.get(key));\r\n\r\n  const set = useCallback(newValue => {\r\n    storage.set(key, newValue);\r\n    setState(newValue);\r\n  }, [key]);\r\n\r\n  const remove = useCallback(() => {\r\n    storage.remove(key);\r\n    setState(undefined);\r\n  }, [key]);\r\n\r\n  return [state, set, remove];\r\n}","import Header from \"./components/Header\";\r\nimport Login from \"./components/Login\";\r\nimport Table from \"./components/Table\";\r\nimport CadastroEnfermeiro from \"./components/CadastroEnfermeiro\";\r\nimport CadastroVacina from './components/CadastroVacina';\r\nimport CadastroVacinacao from './components/CadastroVacinacao';\r\nimport StoreProvider from './components/Store/Provider';\r\n\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport \"./assets/App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <section className=\"content\">\r\n      <Router>\r\n        <StoreProvider>\r\n          <Header/>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Login />\r\n            </Route>\r\n            <Route exact path=\"/pacientes\">\r\n              <Table tabela=\"pacientes\" />\r\n            </Route>\r\n            <Route exact path=\"/enfermeiros\">\r\n              <Table tabela=\"enfermeiros\" />\r\n            </Route>\r\n            <Route path=\"/enfermeiros/cadastrar\">\r\n              <CadastroEnfermeiro />\r\n            </Route>\r\n            <Route exact path=\"/vacinas\">\r\n              <Table tabela=\"vacinas\"/>\r\n            </Route>\r\n            <Route path=\"/vacinas/cadastrar\">\r\n              <CadastroVacina />\r\n            </Route>\r\n            <Route path=\"/vacinacao/cadastrar\">\r\n              <CadastroVacinacao />\r\n            </Route>\r\n            <Route path=\"*\">\r\n              <h2>404</h2>\r\n            </Route>\r\n          </Switch>\r\n        </StoreProvider>\r\n      </Router>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.Fragment>\n      <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}